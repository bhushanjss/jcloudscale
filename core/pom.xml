<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>jcloudscale.core</artifactId>
	<name>JCloudScale Core</name>
	<description>JCloudScale</description>

	<parent>
		<groupId>jcloudscale</groupId>
		<artifactId>jcloudscale</artifactId>
		<version>0.4.0</version>
	</parent>

	<properties>
		<javaVersion>1.7</javaVersion>
		<aspectj.version>1.7.0</aspectj.version><!-- -javaagent:lib/aspectjweaver.jar -->
		<testsJVMArgumensLine>-Xmx2048m</testsJVMArgumensLine>
		<libraryDirectory>lib</libraryDirectory>
		<classLoaderCacheDir>classLoaderCache</classLoaderCacheDir>
		<libraryDirectoryPath>${project.build.directory}/${libraryDirectory}</libraryDirectoryPath>
		<serverMainClass>at.ac.tuwien.infosys.jcloudscale.server.JCloudScaleServerRunner</serverMainClass>
		<resources.jcloudscale>src/main/resources/META-INF</resources.jcloudscale>
		<resources.tests>src/test/resources/META-INF</resources.tests>
		<testsTempFolder>tests-temp</testsTempFolder>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
			    <groupId>com.google.guava</groupId>
			    <artifactId>guava</artifactId>
			    <version>15.0</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	<dependencies>
		
		<!-- core JCloudScale stuff -->
		<dependency>
			<groupId>javax.jms</groupId>
			<artifactId>jms-api</artifactId>
			<version>1.1-rev-1</version>
		</dependency>

		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-jms_1.1_spec</artifactId>
			<version>1.1.1</version>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectj.version}</version>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectj.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-core</artifactId>
			<version>5.6.0</version>
		</dependency>

		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2.2</version>
		</dependency>

		<!-- Eventing -->
		<dependency>
			<groupId>com.espertech</groupId>
			<artifactId>esper</artifactId>
			<version>4.6.0</version>
		</dependency>

		<!-- JClouds -->
		  <dependency>
		    <groupId>org.apache.jclouds</groupId>
		    <artifactId>jclouds-all</artifactId>
		    <version>1.7.0</version>
		  </dependency>
		  
		<!-- Openstack Backend -->
		<!--<dependency>
			<groupId>org.openstack</groupId>
			<artifactId>nova-client</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.openstack</groupId>
			<artifactId>keystone-client</artifactId>
			<version>2.0.0</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.8</version>
		</dependency>-->
		


		<!-- EC2 Backend -->
		<dependency>
			<groupId>com.amazonaws</groupId>
			<artifactId>aws-java-sdk</artifactId>
			<version>1.4.7</version>
		</dependency>

		<!-- CPU monitoring -->
		<dependency>
			<groupId>org.fusesource</groupId>
			<artifactId>sigar</artifactId>
			<version>1.6.4</version>
		</dependency>

		<!-- Don't know who requires it, but looks like some at least remote logging 
			uses this -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.6.6</version>
		</dependency>

		<!-- TESTS DEPENDENCIES -->

		<!-- testing -->
		<dependency>
			<scope>test</scope>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
		</dependency>

		<dependency>
			<scope>test</scope>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.3.2</version>
		</dependency>

	</dependencies>

	<repositories>
		<repository>
			<id>MavenCentral</id>
			<name>Maven repository</name>
			<url>http://repo1.maven.org/maven2</url>
		</repository>
		<!-- 
		<repository>
			<id>infosys-repo</id>
			<url>http://www.infosys.tuwien.ac.at/mvn</url>
		</repository>
		 -->
		<!-- <repository> -->
		<!-- <id>woorea-releases</id> -->
		<!-- <url>https://raw.github.com/woorea/maven/master/snapshots</url> -->
		<!-- </repository> -->
		<!-- <repository> -->
		<!-- <id>local dependency repository</id> -->
		<!-- <url>file://${basedir}/repository</url> -->
		<!-- </repository> -->
	</repositories>

	<profiles>
		<profile>
			<id>local-tests</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.10</version>
						<configuration>
							<skip>true</skip>
						</configuration>
						<executions>
							<execution>
								<id>surefire-it</id>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<argLine>${testsJVMArgumensLine}</argLine>
									<skip>false</skip>
									<excludes>
										<exclude>**/*Openstack*.java</exclude>
										<exclude>**/*EC2*.java</exclude>
										<exclude>**/unit/*.java</exclude>
									</excludes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>openstack-tests</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.10</version>
						<configuration>
							<skip>true</skip>
						</configuration>
						<executions>
							<execution>
								<id>surefire-it</id>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<argLine>${testsJVMArgumensLine}</argLine>
									<skip>false</skip>
									<includes>
										<include>**/*Openstack*.java</include>
									</includes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
			<profile>
			<id>ec2-tests</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.10</version>
						<configuration>
							<skip>true</skip>
						</configuration>
						<executions>
							<execution>
								<id>surefire-it</id>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<argLine>${testsJVMArgumensLine}</argLine>
									<skip>false</skip>
									<includes>
										<include>**/*EC2*.java</include>
									</includes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>unit-tests</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<version>2.10</version>
						<configuration>
							<skip>true</skip>
						</configuration>
						<executions>
							<execution>
								<id>surefire-it</id>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<argLine>${testsJVMArgumensLine}</argLine>
									<skip>false</skip>
									<includes>
										<include>**/unit/*.java</include>
									</includes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<!-- Configuration -->
	<build>
		<plugins>
			<!-- specify the java version for code compiler plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.1</version>
				<configuration>
					<source>${javaVersion}</source>
					<target>${javaVersion}</target>
				</configuration>
			</plugin>

			<!-- Specifying that aspectJ should weave aspects in compile-time -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>1.4</version>
				<configuration>
					<source>${javaVersion}</source>
					<target>${javaVersion}</target>
					<complianceLevel>${javaVersion}</complianceLevel>
					<verbose>true</verbose>
					<weaveWithAspectsInMainSourceFolder>true</weaveWithAspectsInMainSourceFolder>
					<!-- <excludes> <exclude>**/StateEventAspect.java</exclude> </excludes> -->
				</configuration>
				<executions>
					<execution>
						<configuration>
							<XnoInline>true</XnoInline>
						</configuration>
						<goals>
							<goal>compile</goal>
							<goal>test-compile</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjrt</artifactId>
						<version>${aspectj.version}</version>
					</dependency>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjtools</artifactId>
						<version>${aspectj.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<!-- skip unit test run, tests has to be executed during integration-test -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.10</version>
				<configuration>
					<skip>true</skip>
				</configuration>
				<executions>
					<execution>
						<id>surefire-it</id>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<argLine>${testsJVMArgumensLine}</argLine>
							<skip>false</skip>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Copy all dependencies to lib folder in target folder. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.5</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${libraryDirectoryPath}</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Building runnable jars for project and tests. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<archive>
						<index>true</index>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>${libraryDirectory}</classpathPrefix>
							<mainClass>${serverMainClass}</mainClass>
						</manifest>
					</archive>
					<goal>
					</goal>
				</configuration>
				<!-- <executions> Build tests also to lib dir -->
				<!-- <execution> -->
				<!-- <id>test-jar</id> -->
				<!-- <phase>package</phase> -->
				<!-- <goals> -->
				<!-- <goal>test-jar</goal> -->
				<!-- </goals> -->
				<!-- <configuration> -->
				<!-- <outputDirectory>${libraryDirectoryPath}</outputDirectory> -->
				<!-- </configuration> -->
				<!-- </execution> -->
				<!-- </executions> -->
			</plugin>

			<!-- <plugin> <artifactId>maven-assembly-plugin</artifactId> <configuration> 
				<archive> <manifest> <mainClass>${serverMainClass}</mainClass> </manifest> 
				</archive> <descriptorRefs> <descriptorRef>jar-with-dependencies</descriptorRef> 
				</descriptorRefs> </configuration> <executions> <execution> <id>jcloudscale-with-dependencies</id> 
				<phase>package</phase> <goals> <goal>single</goal> </goals> </execution> 
				</executions> </plugin> -->

		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.7,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-dependency-plugin
										</artifactId>
										<versionRange>
											[2.5,)
										</versionRange>
										<goals>
											<goal>
												copy-dependencies
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											aspectj-maven-plugin
										</artifactId>
										<versionRange>
											[1.4,)
										</versionRange>
										<goals>
											<goal>compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											aspectj-maven-plugin
										</artifactId>
										<versionRange>
											[1.4,)
										</versionRange>
										<goals>
											<goal>test-compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<executions>
						<execution>
							<goals>
								<goal>exec</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<executable>java</executable>
						<arguments>
							<argument>-classpath</argument>
							<classpath />
							<argument>at.ac.tuwien.infosys.jcloudscale.server.JCloudScaleServerRunner</argument>
						</arguments>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>2.3.2</version>
					<configuration>
						<findbugsXmlOutput>true</findbugsXmlOutput>
						<findbugsXmlWithMessages>true</findbugsXmlWithMessages>
						<xmlOutput>true</xmlOutput>
						<excludeFilterFile>findbugsIgnore.xml</excludeFilterFile>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>
</project>
